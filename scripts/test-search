#!/usr/bin/env python
# -*- coding: utf-8

#######################################################################
# Copyright 2010 Signove Corporation - All rights reserved.
# Contact: Signove Corporation (contact@signove.com)
#
# This library is free software; you can redistribute it and/or modify
# it under the terms of version 2.1 of the GNU Lesser General Public
# License as published by the Free Software Foundation.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place, Suite 330,
# Boston, MA 02111-1307  USA
#
# If you have questions regarding the use of this file, please contact
# Signove at contact@signove.com.
#######################################################################

import dbus
from sys import exit
import dbus.mainloop.glib
dbus.mainloop.glib.DBusGMainLoop(set_as_default=True)
from mcap import misc
import glib

class Obs(object):
	def device_created(self, addr):
		print "Obs: created", addr

	def device_removed(self, addr):
		print "Obs: removed", addr

	def device_found(self, addr):
		print "Obs: found", addr

	def device_disappeared(self, addr):
		print "Obs: disapp", addr

	def bluetooth_dead(self):
		print "Obs: bt dead"

	def bluetooth_alive(self):
		print "Obs: bt alive"

	def adapter_added(self, name):
		print "Obs: adapter added", name

	def adapter_removed(self, name):
		print "Obs: adapter removed", name


bz = misc.BlueZ()
o = Obs()

def register():
	# We are interested in Health Sources only
	bz.register_observer(o, "1401")
	bz.search()
	return False

glib.timeout_add(5000, register)

try:
	loop = glib.MainLoop()
	loop.run()
except KeyboardInterrupt:
	print
	pass
finally:
	bz.unregister_observer(o)
